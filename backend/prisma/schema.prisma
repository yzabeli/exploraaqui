generator client {
  provider = "prisma-client-js"
}

datasource db {
  //provider = "postgresql"
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model CadastroUsuarios {
  id String @id @default(uuid())
  nome String
  cpf String @unique
  telefone String
  email String
  senha String

  fazerReserva FazerReserva[]


  create_at DateTime? @default(now())
  update_at DateTime @default(now())

  @@map("cadastro_usuarios")
}

model CadExcursoes {
  id String @id @default(uuid())
  nome String
  descricao String
  dia String
  preco String
  local String
  disponibilidade String
  banner String

  fazerReserva FazerReserva[]
  itens ItemsCarrinho[]

  create_at DateTime? @default(now())
  update_at DateTime @default(now())

  @@map("cadastro_excursoes")
}

model CadastroFuncionarios {
  id String @id @default(uuid())
  nome String
  cpf String @unique
  telefone String
  email String

  hierarquia CadastroHierarquia @relation(fields: [idHierarquia], references: [id])
  idHierarquia String 
  

  create_at DateTime? @default(now())
  update_at DateTime @default(now())

  @@map("cadastro_funcionarios")  
}

model CadastroHierarquia {
  id String @id @default(uuid())
  nome String @unique
  descricao String

  cadastroFuncionarios CadastroFuncionarios[]

  create_at DateTime? @default(now())
  update_at DateTime @default(now())

  @@map("cadastro_hierarquia")
}

model FazerReserva {
  id String @id @default(uuid())
  nome String
  email String

  excursoes CadExcursoes @relation(fields: [idExcursao], references: [id])
  idExcursao String
  
  usuario CadastroUsuarios @relation(fields: [idUsuario], references: [id])
  idUsuario String
  
  create_at DateTime? @default(now())
  update_at DateTime @default(now())

  @@map("fazer_reserva")
}

model Clientes {
  id          String  @id @default(uuid())
  nome        String
  cpf         String
  email       String
  password    String
  cep         String
  rua         String
  numero      String
  complemento String?
  bairro      String
  cidade      String
  estado      String
  funcionario Boolean @default(true)
  cliente     Boolean @default(false)

  carrinho Carrinho[]

  data_criacao   DateTime @default(now())
  data_alteracao DateTime @updatedAt

  @@map("clientes")
}

model Carrinho {
  id          String   @id @default(uuid())
  n_pedido    Int      @unique @default(autoincrement())
  valor_total Decimal? @db.Decimal(9, 2)
  status      String   @default("Aguardando")
  draft       Boolean  @default(true)
  entrega     Boolean  @default(false)
  aceito      Boolean  @default(false)

  itens ItemsCarrinho[]
  cliente Clientes @relation(fields: [id_cliente], references: [id])
  id_cliente String
  

  data_criacao   DateTime @default(now())
  data_alteracao DateTime @updatedAt

  @@map("carrinho")
}

model ItemsCarrinho {
  id         String  @id @default(uuid())
  quantidade Int @default(1)
  valor      Decimal @db.Decimal(9, 2)

  carrinho Carrinho @relation(fields: [id_carrinho], references: [id], onDelete: Cascade)
  id_carrinho String
  excursao CadExcursoes @relation(fields: [id_Excursao], references: [id])
  id_Excursao String

  data_criacao   DateTime @default(now())
  data_alteracao DateTime @updatedAt

  @@map("itens_carrinho")
}